# SR锁存器

```c
// 定义SR锁存器的结构
typedef struct {
    bool S; // 置位输入
    bool R; // 复位输入
    bool Q; // 输出Q
    bool Qnot; // 输出Q̅
} SR_Latch;

// 初始化SR锁存器
void initSR_Latch(SR_Latch* latch) {
    latch->S = false;
    latch->R = false;
    latch->Q = false;
    latch->Qnot = true;
}

// 更新SR锁存器的状态
void updateSR_Latch(SR_Latch* latch) {
    if (latch->S && latch->R) {
        printf("Invalid input: S and R cannot both be 1.\n");
        return; // 非法输入，S和R不能同时为1
    }

    if (latch->S) { // 置位操作
        latch->Q = true;
        latch->Qnot = false;
    } else if (latch->R) { // 复位操作
        latch->Q = false;
        latch->Qnot = true;
    } // 如果S和R都是0，保持当前状态
}

int main()
{
    SR_Latch latch;
    initSR_Latch(&latch);
    updateSR_Latch(&latch);
}
```

